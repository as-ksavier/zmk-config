/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT   0
#define NUMBERS   1
#define SYMBOLS   2
#define ARROWS    3

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  Y  |  C  |  L  |  M  |  K  |           |  Z  |  F   |  U  |  X  |  '  |
// |  I  |  S  |  R  | T&S |  G  |           |  P  |  N&S |  E  |  A  |  O  |  
// |  Q  |  V  |  W  |  D  |  J  |           |  B  |  H   |LT2&,|  .  |  /  | 
//   | DEL |SPACE&LT1|BSPC&option|           | RET&META | ESC&LT1  |  |
                        bindings = <
   &trans &kp Y &kp C  &kp L &kp M &kp K          &kp Z &kp F &kp U &kp X &mt LALT SQT &trans
   &trans &kp I &kp S  &kp R &kp T &kp G          &kp P &kp N &kp E &kp A &kp O &trans 
   &trans &kp Q &kp V  &kp W &kp D &kp J          &kp B &kp H &lt 1 COMMA &lt 2 DOT &lt 3 FSLH  &trans    
   &mt LCTRL DEL &mt LSHFT SPACE &mt RMETA BSPC      &mt RCTRL RET &mt RSHIFT ESC &kp CAPS
                        >;
                };
                numbers_layer {
// -----------------------------------------------------------------------------------------
// |  Y  |  C  |  L  |  M  |  K  |           |  Z  |  F   |  U  |  X  |  '  |
// |  I  |  S  |  R  | T&S |  G  |           |  P  |  N&S |  E  |  A  |  O  |  
// |  Q  |  V  |  W  |  D  |  J  |           |  B  |  H   |LT2&,|  .  |  /  | 
//   | DEL |SPACE&LT1|BSPC&option|           | RET&META | ESC&LT1  |  |
                        bindings = <
   &trans &trans &kp N7  &kp N8 &kp N9 &trans        &trans  &trans  &trans  &trans  &trans  &trans 
   &trans &kp LG(C) &kp N4  &kp N5 &kp N6 &kp LG(V)  &trans  &trans  &trans  &trans  &trans  &trans  
   &trans &trans &kp N1  &kp N2 &kp N3 &trans         &trans  &trans  &trans  &trans  &trans  &trans    
   &trans &kp N0  &kp BSPC                            &trans  &trans  &trans  
                        >;
                };

                symbols_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &trans &kp SEMI &kp UNDER  &kp PLUS &kp LBRC &kp RBRC            &trans  &trans  &trans  &trans  &trans  &trans
   &trans &kp COLON  &kp MINUS &kp EQUAL &kp LPAR &kp RPAR     &trans  &trans  &trans  &trans  &trans  &trans
   &trans &trans &kp GRAVE  &kp BSLH &kp LBKT &kp RBKT       &trans  &trans  &trans  &trans  &trans  &trans     
   &trans &kp BSPC &kp LCTRL                                      &trans  &trans  &trans  
                        >;
                };
                 arrows_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &trans &trans &trans  &kp C_VOL_DN &kp C_VOL_UP  &bt BT_CLR            &trans  &trans  &trans  &trans  &trans  &trans    
   &trans &kp LEFT &kp DOWN &kp UP &kp RIGHT &kp TAB     &trans  &trans  &trans  &trans  &trans  &trans  
   &trans &trans &kp GRAVE  &kp BSLH &kp LBKT &kp RBKT       &trans  &trans  &trans  &trans  &trans  &trans     
   &trans &kp LG(TAB) &trans                                      &trans  &trans  &trans  
                        >;
                };
        };
};
